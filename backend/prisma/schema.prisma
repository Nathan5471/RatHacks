generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum AccountType {
  student
  judge
  organizer
}

enum GradeLevel {
  nine
  ten
  eleven
  twelve
}

enum Status {
  upcoming
  ongoing
  completed
}

model User {
  id                     String      @id @default(uuid())
  email                  String      @unique
  emailToken             String
  emailVerified          Boolean     @default(false)
  lastResendEmailRequest DateTime?
  accountType            AccountType @default(student)
  password               String
  firstName              String
  lastName               String
  schoolDivision         String?
  gradeLevel             GradeLevel?
  isGovSchool            Boolean?
  techStack              String?
  previousHackathon      Boolean?
  parentFirstName        String?
  parentLastName         String?
  parentEmail            String?
  parentPhoneNumber      String?
  events                 String[] // Event Ids
  workshops              String[] // Workshop Ids
  validAccessTokens      String[]
  validRefreshTokens     String[]
  createdAt              DateTime    @default(now())
}

model Team {
  id               String   @id @default(uuid())
  joinCode         String   @unique
  members          String[] // User Ids (max 4)
  eventId          String
  submittedProject Boolean  @default(false)
  project          String? // Project Id
  createdAt        DateTime @default(now())
}

model Project {
  id             String   @id @default(uuid())
  name           String
  description    String
  codeURL        String?
  screenshotPath String?
  videoPath      String?
  demoURL        String?
  eventId        String
  teamId         String
  createdAt      DateTime @default(now())
  submittedBy    String // User Id
  submittedAt    DateTime @default(now())
}

model Event {
  id                 String   @id @default(uuid())
  name               String
  description        String
  location           String
  startDate          DateTime
  endDate            DateTime
  submissionDeadline DateTime
  status             Status   @default(upcoming)
  participants       String[] // User Ids
  teams              String[] // Team Ids
  projects           String[] // Project Ids
  createdBy          String // Organizer Id
  createdAt          DateTime @default(now())
}

model Workshop {
  id            String   @id @default(uuid())
  name          String
  description   String
  googleMeetURL String?
  startDate     DateTime
  endDate       DateTime
  status        Status   @default(upcoming)
  participants  String[] // User Ids
  organizer     String // Organizer Id
  createdAt     DateTime @default(now())
}
